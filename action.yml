name: "Build Go Application"
description: "Builds the application written in Go and uploads artifact with the binary and additional files"

inputs:
  go_version:
    required: false
    default: '1.21'
    description: "Version of Go which should be used to perform the checks"

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: git fetch --force --tags
      shell: bash
    - name: 'Default CGO_ENABLED = 0'
      if: env.CGO_ENABLED == ''
      shell: bash
      run: echo "CGO_ENABLED=0" >> $GITHUB_ENV
    - uses: actions/setup-go@v4
      with:
        go-version: ${{inputs.go_version}}
    - name: Install cross-compiler for linux/arm64
      if: env.CGO_ENABLED == '1'
      shell: bash
      run: sudo apt-get update && sudo apt-get -y install gcc-aarch64-linux-gnu
    - name: 'Set target os'
      shell: bash
      run: echo "TARGET_OS=$(go env GOOS)" >> $GITHUB_ENV
    - name: 'Prepare goreleaser configuration'
      shell: bash
      run: 'envsubst < ${{ github.action_path }}/.goreleaser.template.yml > ${{ github.action_path }}/.goreleaser.yml'
    - uses: goreleaser/goreleaser-action@v5
      with:
        version: latest
        args: -f ${{ github.action_path }}/.goreleaser.yml release --clean --debug
      env:
        GITHUB_TOKEN: ${{ github.token }}
        PROJECT_NAME: ${{ github.event.repository.name }}
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: bin-${{ env.TARGET_OS }}
        path: |
          dist/${{ github.event.repository.name }}_*.tar.gz
          dist/*_checksums.txt
          
